FROM node:alpine

ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG AWS_ACCESS_REGION

ENV AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
ENV AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
ENV AWS_DEFAULT_REGION=${AWS_ACCESS_REGION}

RUN apk update && apk upgrade && apk add nano


RUN apk --no-cache add python3 py3-pip

RUN  pip3 install --upgrade pip \
  && pip3 install --no-cache-dir awscli

# Downloading necessary configuration files
RUN aws s3 cp s3://united-sharedbills/deploy/production/united_api_rsa /root/.ssh/united_deploy
RUN aws s3 cp s3://united-sharedbills/deploy/production/united_core_rsa /root/.ssh/united_core_deploy
RUN aws s3 cp s3://united-sharedbills/deploy/production/config /root/.ssh/config
# Set environment variables for git
ENV GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
# Install git and openssh-client for cloning private repos
RUN apk add git openssh-client
#

##
RUN mkdir -p /root/.ssh && \
    chmod 0700 /root/.ssh && \
    ssh-keyscan github.com >> /root/.ssh/known_hosts && \
    chmod 0400 /root/.ssh/united_deploy /root/.ssh/united_core_deploy && \
    eval "$(ssh-agent -s)" && \
    ssh-add /root/.ssh/united_deploy && \
    ssh-add /root/.ssh/united_core_deploy

WORKDIR /app


#Clone the private repository with submodules
RUN  git clone git@github.com:bStrano/united-sharedbill-api.git .
RUN sed -i 's/git@github\.com:bStrano\/united-shared-core\.git/ssh:\/\/github\.com-united-core\/bStrano\/united-shared-core\.git/g' .gitmodules

RUN  git submodule update --init --recursive
RUN  git checkout master && git pull

RUN aws s3 cp s3://united-sharedbills/deploy/production/.env.production /app/.env

COPY package.json /app
RUN yarn install

RUN yarn build
EXPOSE 3000

CMD ["yarn","start:prod"]
